@model Inventory.Models.ItemEdit

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>ItemEdit</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ItemId)

    <div class="form-group">
        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Category", new List<SelectListItem>
            {
               new SelectListItem{ Text="Baking" },
               new SelectListItem{ Text="Beverage" },
               new SelectListItem{ Text="Breakfast" },
               new SelectListItem{ Text="Can" },
               new SelectListItem{ Text="Condiment"},
               new SelectListItem{ Text="Drink"},
               new SelectListItem{ Text="Pasta/Grain" },
               new SelectListItem{ Text="Sauce" },
               new SelectListItem{ Text="Snack" },
               new SelectListItem{ Text="Tea/Coffee" },
               new SelectListItem{ Text="Vegetable" },
            }, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ItemName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Location", new List<SelectListItem>
            {
               new SelectListItem{ Text="Pantry" },
               new SelectListItem{ Text="Bar Storage" },
               new SelectListItem{ Text="Refrigerator 1" },
               new SelectListItem{ Text="Refrigerator 2" },
               new SelectListItem{ Text="Freezer 1"},
               new SelectListItem{ Text="Freezer 2"},
            }, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Shelf, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Shelf, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Shelf, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Qty, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
